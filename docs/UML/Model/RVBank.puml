@startuml
interface IRVBank {
    + FileName : string <<get>> <<set>>
    + BankPrefix : string <<get>> <<set>>
    Path : string <<get>>
    AbsolutePath : string <<get>>
    ParentDirectory : IRVBankDirectory <<get>> <<set>>
    EntryName : string <<get>> <<set>>
    EntryMime : RVBankEntryMime <<get>> <<set>>
    OriginalSize : int <<get>> <<set>>
    Offset : int <<get>> <<set>>
    TimeStamp : int <<get>> <<set>>
    DataSize : int <<get>> <<set>>
    Move(directory:IRVBankDirectory) : void
    MoveAndReplace(directory:IRVBankDirectory) : IEnumerable<IRVBankEntry>
    Delete() : void
}
class RVBank {
    + FileName : string <<get>> <<set>>
    + BankPrefix : string <<get>> <<set>>
    + BankFile : IRVBank <<get>>
    + IsFirstRead : bool <<get>> = true
    - <<readonly>> pboEntries : ObservableCollection<IRVBankEntry>
    + PboEntries : ObservableCollection<IRVBankEntry> <<get>> <<init>>
    + RVBank(filename:string, entries:IEnumerable<IRVBankEntry>, synchronizeTo:Stream?, logger:ILogger?)
    + RVBank(filename:string, reader:BisBinaryReader, options:RVBankOptions, synchronizeTo:Stream?, logger:ILogger?)
    + {static} ReadPbo(path:string, options:RVBankOptions, syncTo:Stream?, logger:ILogger) : RVBank
    + <<sealed>> <<override>> Debinarize(reader:BisBinaryReader, options:RVBankOptions) : Result
    + <<override>> Binarize(writer:BisBinaryWriter, options:RVBankOptions) : Result
    + <<override>> Validate(options:RVBankOptions) : Result
    - {static} ReadDigest(reader:BisBinaryReader) : RVBankDigest
    - {static} CalculateDigest(stream:Stream) : RVBankDigest
    + CalculateHeaderLength(options:RVBankOptions) : int
}
"IBisSynchronizable`1" "<RVBankOptions>" <|-- IRVBank
IRVBankDirectory <|-- IRVBank
"BisSynchronizable`1" "<RVBankOptions>" <|-- RVBank
IRVBank <|-- RVBank
@enduml
